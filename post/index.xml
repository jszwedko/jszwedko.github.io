<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jesse Szwedko</title>
    <link>http://jesseszwedko.com/post/</link>
    <description>Recent content in Posts on Jesse Szwedko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Aug 2015 13:16:22 -0700</lastBuildDate>
    
	<atom:link href="http://jesseszwedko.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS Autoscaling Ansible Inventory</title>
      <link>http://jesseszwedko.com/post/ansible-autoscaling-inventory/</link>
      <pubDate>Sat, 15 Aug 2015 13:16:22 -0700</pubDate>
      
      <guid>http://jesseszwedko.com/post/ansible-autoscaling-inventory/</guid>
      <description>As described in a previous post, at Braintree, we use Ansible as the user data in the launch configurations (LC) of our autoscaling groups (ASGs) to configure instances on boot via a bash script with a base64 encoded tarball of the playbook directory. While we find this is a very effective way to structure the configuration, testing new configuration can be time consuming as it requires a new LC to be created and attached to the ASG followed by cycling an instance in the ASG by terminating it so that a new one, with the new configuration, takes its place.</description>
    </item>
    
    <item>
      <title>Using Ansible to provision AWS autoscaling instances</title>
      <link>http://jesseszwedko.com/post/ansible-aws-launch-configuration/</link>
      <pubDate>Sat, 11 Jul 2015 19:15:44 -0700</pubDate>
      
      <guid>http://jesseszwedko.com/post/ansible-aws-launch-configuration/</guid>
      <description>Problem statement: If you are running your infrastructure on EC2 in AWS, you are probably using AWS&amp;rsquo;s autoscaling service to manage your instances. If you are not, you should be. Even if you don&amp;rsquo;t plan to have your instances scale up and down based on traffic patterns, you&amp;rsquo;ll want to use autoscaling for the simple case of keeping a certain number of instances running if one of them stops responding or is decommissioned by AWS &amp;ndash; without requiring manual intervention by an engineer to spin up and configure a new server.</description>
    </item>
    
    <item>
      <title>git-duet release</title>
      <link>http://jesseszwedko.com/post/git-duet-release/</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/post/git-duet-release/</guid>
      <description>Today marks the release of the Go port of git-duet!
git-duet allows paired programmers to not lose their identities when collaborating on git commits.
See the project page for more details.</description>
    </item>
    
  </channel>
</rss>