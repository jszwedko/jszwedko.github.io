<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jesse Szwedko</title>
    <link>http://jesseszwedko.com/</link>
    <description>Recent content on Jesse Szwedko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Feb 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://jesseszwedko.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ec2-metadatafs</title>
      <link>http://jesseszwedko.com/project/ec2-metadatafs/</link>
      <pubDate>Sun, 14 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/project/ec2-metadatafs/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/jszwedko/ec2-metadatafs&#34;&gt;&lt;code&gt;ec2-metadatafs&lt;/code&gt;&lt;/a&gt; is
a &lt;a href=&#34;https://github.com/libfuse/libfuse&#34;&gt;FUSE&lt;/a&gt; filesystem that exposes AWS EC2
instance metadata and tags in the form of a directory tree.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWS Autoscaling Ansible Inventory</title>
      <link>http://jesseszwedko.com/post/ansible-autoscaling-inventory/</link>
      <pubDate>Sat, 15 Aug 2015 13:16:22 -0700</pubDate>
      
      <guid>http://jesseszwedko.com/post/ansible-autoscaling-inventory/</guid>
      <description>As described in a previous post, at Braintree, we use Ansible as the user data in the launch configurations (LC) of our autoscaling groups (ASGs) to configure instances on boot via a bash script with a base64 encoded tarball of the playbook directory. While we find this is a very effective way to structure the configuration, testing new configuration can be time consuming as it requires a new LC to be created and attached to the ASG followed by cycling an instance in the ASG by terminating it so that a new one, with the new configuration, takes its place.</description>
    </item>
    
    <item>
      <title>circleci-cli</title>
      <link>http://jesseszwedko.com/project/circleci-cli/</link>
      <pubDate>Sat, 15 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/project/circleci-cli/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/jszwedko/circleci-cli&#34;&gt;&lt;code&gt;circleci-cli&lt;/code&gt;&lt;/a&gt; is a CLI too that
allows you to interact with CircleCI without leaving the comfort of your
terminal.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go-circleci</title>
      <link>http://jesseszwedko.com/project/go-circleci/</link>
      <pubDate>Sat, 15 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/project/go-circleci/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/jszwedko/go-circleci&#34;&gt;&lt;code&gt;go-circleci&lt;/code&gt;&lt;/a&gt; is a Go library that
I wrote to wrap &lt;a href=&#34;https://circleci.com/docs/api&#34;&gt;CircleCI&amp;rsquo;s API&lt;/a&gt;. It can be used
by other Go projects that wish to interact with the API.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Ansible to provision AWS autoscaling instances</title>
      <link>http://jesseszwedko.com/post/ansible-aws-launch-configuration/</link>
      <pubDate>Sat, 11 Jul 2015 19:15:44 -0700</pubDate>
      
      <guid>http://jesseszwedko.com/post/ansible-aws-launch-configuration/</guid>
      <description>Problem statement: If you are running your infrastructure on EC2 in AWS, you are probably using AWS&amp;rsquo;s autoscaling service to manage your instances. If you are not, you should be. Even if you don&amp;rsquo;t plan to have your instances scale up and down based on traffic patterns, you&amp;rsquo;ll want to use autoscaling for the simple case of keeping a certain number of instances running if one of them stops responding or is decommissioned by AWS &amp;ndash; without requiring manual intervention by an engineer to spin up and configure a new server.</description>
    </item>
    
    <item>
      <title>git-duet</title>
      <link>http://jesseszwedko.com/project/git-duet/</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/project/git-duet/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/git-duet/git-duet&#34;&gt;&lt;code&gt;git-duet&lt;/code&gt;&lt;/a&gt; makes use of the committer
field of &lt;code&gt;git&lt;/code&gt; commits to allow paired pairing while maintaining identity.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git-duet release</title>
      <link>http://jesseszwedko.com/post/git-duet-release/</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/post/git-duet-release/</guid>
      <description>Today marks the release of the Go port of git-duet!
git-duet allows paired programmers to not lose their identities when collaborating on git commits.
See the project page for more details.</description>
    </item>
    
    <item>
      <title>Debugging Go</title>
      <link>http://jesseszwedko.com/talk/go-debugging/</link>
      <pubDate>Thu, 31 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/talk/go-debugging/</guid>
      <description>Talk I gave at the Go Steel Programmers meet-up group in Pittsburgh about the current state of Go debugging (both traditional debuggers as well as print/log based debugging).</description>
    </item>
    
    <item>
      <title>Golang ORMs: A survey of the current state of Golang ORMs</title>
      <link>http://jesseszwedko.com/talk/go-orms/</link>
      <pubDate>Thu, 30 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/talk/go-orms/</guid>
      <description>&lt;p&gt;Talk I gave at the Go Steel Programmers meet-up group in Pittsburgh about
the current state of Go ORMs.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Path to Go 1.1</title>
      <link>http://jesseszwedko.com/talk/path-to-go-1-1/</link>
      <pubDate>Thu, 28 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/talk/path-to-go-1-1/</guid>
      <description>Talk given at the Go Steel Programmers meet-up group in Pittsburgh about changes in the version 1.1 release of Go with Sheena Smith.</description>
    </item>
    
    <item>
      <title>Continous Delivery: Reliable software development through automation</title>
      <link>http://jesseszwedko.com/talk/continous-delivery-pitt/</link>
      <pubDate>Wed, 04 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/talk/continous-delivery-pitt/</guid>
      <description>&lt;p&gt;Talk I gave to undergraduate students at the University of Pittsburgh
as part of Computer Science Department&amp;rsquo;s Tech Talk series where industry
members give talks about topics not typically covered in undergraduate computer
science course work. The talk covers the basics of source control, test
automation, and deployment automation using git, Travis CI, and capistrano.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Optimizing the Energy Consumption of Continuous Query Processing with Mobile Clients</title>
      <link>http://jesseszwedko.com/publication/optimizing-energy/</link>
      <pubDate>Wed, 01 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/publication/optimizing-energy/</guid>
      <description>Complex event detection over data streams has become ubiquitous through the widespread use of sensors, wireless connectivity and the wide variety of end-user mobile devices. Typically, such event detection is carried out by a data stream management system executing continuous queries (CQs), registered by the users. In this paper, we consider the situation where the results of the CQs, which are in the form of individual data streams, are disseminated to the users&amp;rsquo; hand-held, battery-operated devices over a shared broadcast medium.</description>
    </item>
    
    <item>
      <title>Visualization of Energy Consumption of Continuous Query Processing with Mobile Clients</title>
      <link>http://jesseszwedko.com/publication/visualizing-energy/</link>
      <pubDate>Wed, 01 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/publication/visualizing-energy/</guid>
      <description>Complex event detection over data streams has become ubiquitous through the widespread use of sensors, wireless connectivity and the wide variety of end-user mobile devices. Typically, event detection is carried out by a central server executing continuous queries. In this demonstration, we focus on the case where users with mobile devices submit continuous queries (for event detection) to a data stream management server which disseminates the results to the users over a shared broadcast medium.</description>
    </item>
    
    <item>
      <title>Demonstrating an Evacuation Algorithm with Mobile Devices using an E-Scavenger Hunt Game</title>
      <link>http://jesseszwedko.com/publication/demonstrating-evacuation/</link>
      <pubDate>Mon, 01 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/publication/demonstrating-evacuation/</guid>
      <description>Casualties in emergency situations are often caused by panic and in cases where building evacuation is required, they are often caused by a disorganized evacuation. This has motivated us to design a two-layer indoor evacuation system that takes advantage of two technologies all people carry on them, namely, cellular phones with cameras and RFID cards. The proposed system integrates QR-Code and RFID-based positioning with a routing system with mounted terminals and displays for guiding people with RFID tags out of a building.</description>
    </item>
    
  </channel>
</rss>