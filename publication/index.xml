<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Publications on Jesse Szwedko</title>
    <link>http://jesseszwedko.com/publication/</link>
    <description>Recent content in Publications on Jesse Szwedko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jun 2011 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://jesseszwedko.com/publication/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Optimizing the Energy Consumption of Continuous Query Processing with Mobile Clients</title>
      <link>http://jesseszwedko.com/publication/optimizing-energy/</link>
      <pubDate>Wed, 01 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/publication/optimizing-energy/</guid>
      <description>&lt;p&gt;Complex event detection over data streams has become ubiquitous through the
widespread use of sensors, wireless connectivity and the wide variety of
end-user mobile devices. Typically, such event detection is carried out by
a data stream management system executing continuous queries (CQs), registered
by the users. In this paper, we consider the situation where the results of the
CQs, which are in the form of individual data streams, are disseminated to the
users&amp;rsquo; hand-held, battery-operated devices over a shared broadcast medium. In
order to reduce the overall energy consumption of the mobile devices, we
propose Bose&lt;em&gt;, a power-aware query operator placement algorithm that determines
which part of a CQ plan should be executed at the data stream management system
and which part should be executed at the mobile device. Bose&lt;/em&gt;&amp;rsquo;s effectiveness
in reducing energy consumption, as well as response time under specific
conditions, is evaluated using simulation, driven by parameters measured on
real mobile devices.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Visualization of Energy Consumption of Continuous Query Processing with Mobile Clients</title>
      <link>http://jesseszwedko.com/publication/visualizing-energy/</link>
      <pubDate>Wed, 01 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/publication/visualizing-energy/</guid>
      <description>&lt;p&gt;Complex event detection over data streams has become ubiquitous through the
widespread use of sensors, wireless connectivity and the wide variety of
end-user mobile devices. Typically, event detection is carried out by a central
server executing continuous queries. In this demonstration, we focus on the
case where users with mobile devices submit continuous queries (for event
detection) to a data stream management server which disseminates the results to
the users over a shared broadcast medium. In order to minimize the overall
energy consumption of the mobile devices (clients), we have proposed operator
placement algorithms that split the processing of each continuous query between
the centralized server and the requesting mobile clients, thus trading off
energy consumption for communication energy consumption for computation.
Specifically, in this demonstration, we present an interactive graphical
interface to the inner workings of our three proposed operator placement
algorithms, whereby attendees are able to investigate various query plans and
the decisions that the algorithms make, as well as visualize the results of
these algorithms in terms of client power consumption and response time.
Besides being able to step through an algorithm&amp;rsquo;s execution as it considers
various operator placement decisions, attendees are able to experiment with
different scenarios by customizing the parameters of the query workloads (e.g.,
changing the selectivities and projectivities of the operators) or the client&amp;rsquo;s
profile (e.g., power consumed per unit of time of processing) and examine the
impact.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Demonstrating an Evacuation Algorithm with Mobile Devices using an E-Scavenger Hunt Game</title>
      <link>http://jesseszwedko.com/publication/demonstrating-evacuation/</link>
      <pubDate>Mon, 01 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>http://jesseszwedko.com/publication/demonstrating-evacuation/</guid>
      <description>&lt;p&gt;Casualties in emergency situations are often caused by panic and in cases where
building evacuation is required, they are often caused by a disorganized
evacuation. This has motivated us to design a two-layer indoor evacuation
system that takes advantage of two technologies all people carry on them,
namely, cellular phones with cameras and RFID cards. The proposed system
integrates QR-Code and RFID-based positioning with a routing system with
mounted terminals and displays for guiding people with RFID tags out of
a building. People with mobile devices with cameras use an application that
resolves QR-Codes into web addresses that point to dynamically generated
evacuation instructions. As a proof-of-concept, we have implemented this system
with commercially available tools and components as an e-scavenger hunt game
which uses SCAVY, our novel evacuation (routing) algorithm, to guide players
around a building visiting different locations in a load balancing manner. In
this demo, we are planning to deploy this e-scavenger game and the participants
would be able to follow the progress of the game (evacuation) through a system
monitor dashboard.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>